# To enable ProGuard in your project, edit project.properties
# to define the proguard.config property as described in that file.
#
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in ${sdk.dir}/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the ProGuard
# include property in project.properties.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

-renamesourcefileattribute SourceFile
-keepattributes *Annotation*,Signature,EnclosingMethod,SourceFile,LineNumberTable
-target 1.6
-dontoptimize
-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses 
-dontpreverify 
-verbose 
-dump ../bin/class_files.txt
-printseeds ../bin/seeds.txt
-printusage ../bin/unused.txt
-printmapping ../bin/mapping.txt 

# The -optimizations option disables some arithmetic simplifications that Dalvik 1.0 and 1.5 can't handle. 
-optimizations !code/simplification/arithmetic 

-keep public class * extends android.app.Activity 
-keep public class * extends android.app.Application 
-keep public class * extends android.app.Service 
-keep public class * extends android.content.BroadcastReceiver 
-keep public class * extends android.content.ContentProvider

-keep class com.google.inject.** { *; } 
-keep class javax.inject.** { *; } 
-keep class javax.annotation.** { *; } 
-keep class roboguice.** { *; } 
-keep class javax.annotation.** { *; } 
-keep class org.codehaus.** { *; }
-keepclassmembers class * {
  @com.google.inject.Inject <fields>;
  @com.google.inject.Inject <init>(...);
}

# There's no way to keep all @Observes methods, so use the On*Event convention to identify event handlers
-keepclassmembers class * { 
    void *(**On*Event); 
}
-keep public class * extends android.view.View {
    public <init>(android.content.Context);
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>(android.content.Context, android.util.AttributeSet, int);
    public void set*(...);
} 
-keep public class roboguice.**

# Flags for for the Warnings: "can't find superclass or interface" or "can't find referenced class"
-dontwarn android.support.v4.**
-dontwarn com.xtremelabs.robolectric.**
-dontwarn com.google.android.maps.MapActivity
-dontwarn com.google.inject.Injector
-dontwarn javax.**
-dontwarn org.junit.runners.model.InitializationError
-dontwarn roboguice.activity.RoboMapActivity

-keepclassmembers class android.support.v4.text.ICUCompatIcs{
  public void getScript(java.lang.String);
  public void addLikelySubtags(java.lang.String);
}

-keepclassmembers class com.google.inject.internal.FinalizableReferenceQueue{
  public void startFinalizer(java.lang.Class,java.lang.Object);
}

-keepclassmembers class com.google.inject.internal.Finalizer{
  public void finalizeReferent();
}

-keepclassmembers class roboguice.activity.RoboMapActivity{
  public android.content.res.Resources getResources();
}

-keepclassmembers class roboguice.inject.ViewListener{
  public void getView();
  public void findFragmentByTag(java.lang.Object);
}

# Preserve all native method names and the names of their classes.
-keepclasseswithmembernames class * {
    native <methods>;
}

-keepclasseswithmembernames class * {
    public <init>(android.content.Context, android.util.AttributeSet);
}

-keepclasseswithmembernames class * {
    public <init>(android.content.Context, android.util.AttributeSet, int);
}

# Explicitly preserve all serialization members. The Serializable interface
# is only a marker interface, so it wouldn't save them.
-keepclassmembers class * implements java.io.Serializable {
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

# Preserve static fields of inner classes of R classes that might be accessed
# through introspection.
-keepclassmembers class **.R$* {
  public static <fields>;
}

-keep class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator *;
}

# Preserve the special static methods that are required in all enumeration classes.
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}
